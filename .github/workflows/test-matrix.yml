name: リリースパイプラインのテスト

on:
  workflow_dispatch:

env:
  PACKAGING_PROJECT_NAME: Maris.Logging.Testing
  PACKAGE_ARTIFACT_NAME: packages

jobs:
  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      packaging_project_name: ${{ steps.matrix.outputs.packaging_project_name }}

    steps:
      - name: マトリクスの定義
        id: matrix
        run: |
          echo 'packaging_project_name=["Maris.Logging.Testing", "Maris.DummyPackage"]' >> $GITHUB_OUTPUT

  packaging:
    name: パッケージング
    needs: define-matrix
    strategy:
      fail-fast: false
      matrix:
        packaging_project_name: ${{ fromJSON(needs.define-matrix.outputs.packaging_project_name) }}
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIGURATION: Release

    steps:
      - name: パッケージの作成
        run: |
          mkdir ${{ matrix.packaging_project_name }}
          cd ${{ matrix.packaging_project_name }}
          echo '${{ matrix.packaging_project_name }} package' > test.txt

      - name: ビルドアーティファクトのアップロード
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.packaging_project_name }}
          path: ${{ matrix.packaging_project_name }}/
          retention-days: 3

  release-to-nuget:
    name: NuGet へのリリース
    strategy:
      fail-fast: false
      matrix:
        packaging_project_name: ${{ fromJSON(needs.define-matrix.outputs.packaging_project_name) }}
    runs-on: ubuntu-latest
    needs: [packaging, define-matrix]

    steps:
      - name: ビルドアーティファクトのダウンロード
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.packaging_project_name }}

      - name: NuGet パッケージの公開
        id: release-to-nuget
        continue-on-error: true
        run: echo '${{ matrix.packaging_project_name }} nuget push log' > nuget_push_log.txt
          
      - name: NuGet パッケージの公開結果表示
        shell: bash
        run: |
          echo "# NuGet release info :toolbox:" >> $GITHUB_STEP_SUMMARY
          echo "## ${{ matrix.packaging_project_name }}" >> $GITHUB_STEP_SUMMARY
          cat nuget_push_log.txt >> $GITHUB_STEP_SUMMARY

      - name: NuGet パッケージの公開結果判定
        if: ${{ steps.release-to-nuget.outcome == 'failure' }}
        run: exit 1

  release-to-github:
    name: GitHub へのリリース
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        packaging_project_name: ${{ fromJSON(needs.define-matrix.outputs.packaging_project_name) }}
    runs-on: ubuntu-latest
    needs: [packaging, release-to-nuget, define-matrix]

    steps:
      - name: ビルドアーティファクトのダウンロード
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.packaging_project_name }}
      
      - name: echo ls
        run: |
          ls -a
